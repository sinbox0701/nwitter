{"version":3,"sources":["fbase.js","components/AuthForm.js","components/Icon.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/Footer.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Ddip","xmlns","width","height","viewBox","id","transform","fill","fontSize","fontFamily","x","y","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachementRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","faUser","color","size","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","Footer","styled","footer","List","ul","ListItem","li","Link","props","theme","darkBlueColor","Copyright","span","darkGreyColor","href","getFullYear","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAeAA,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,eACnBM,MAAON,8CAKJ,IAAMO,EAAmBV,IAEnBW,EAAcX,IAASY,OACvBC,EAAYb,IAASc,YACrBC,EAAiBf,IAASgB,UCsDxBC,EAxEE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAMbC,EAAW,SAACC,GAAW,IAAD,EAGpBA,EADAC,OAASC,EAFW,EAEXA,KAAMC,EAFK,EAELA,MAEP,UAATD,EACCV,EAASW,GAEK,aAATD,GACLR,EAAYS,IAIdC,EAAQ,uCAAG,WAAMJ,GAAN,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAINX,EAJM,gCAKQZ,EAAYwB,+BAA+BhB,EAAME,GALzD,OAKLe,EALK,+CAQQzB,EAAY0B,2BAA2BlB,EAAME,GARrD,QAQLe,EARK,eAUTE,QAAQC,IAAIH,GAVH,kDAaTV,EAAS,KAAMc,SAbN,0DAAH,sDAmBd,OACI,qCACA,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACI,uBACIX,KAAK,QACLY,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRb,MAAOZ,EACPQ,SAAUA,EACVc,UAAU,cAEd,uBACIX,KAAK,WACLY,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRb,MAAOV,EACPM,SAAUA,EACVc,UAAU,cAEd,uBACIC,KAAK,SACLD,UAAU,uBACVV,MAAOR,EAAa,iBAAmB,WAE1CE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAE3C,sBAAMoB,QA9BY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA8BpBL,UAAU,aAAvC,SACKlB,EAAa,UAAY,uB,QCnEzBwB,EAAO,kBAChB,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAvE,SACI,sBAAMC,GAAG,OAAOC,UAAU,mBAAmBC,KAAK,UAAUC,SAAS,KAAKC,WAAW,SAArF,SAA8F,uBAAOC,EAAE,SAASC,EAAE,IAApB,uB,QCiCvFC,EA9BF,WACT,IAAMC,EAAa,uCAAG,WAAOhC,GAAP,iBAAAK,EAAA,4DAKN,YAHCH,EACTF,EADAC,OAASC,MAIT+B,EAAW,IAAInD,EAAiBE,KAAKkD,mBAExB,WAAThC,IACJ+B,EAAW,IAAInD,EAAiBE,KAAKmD,oBATvB,SAWZpD,EAAYqD,gBAAgBH,GAXhB,2CAAH,sDAcnB,OACI,sBAAKpB,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,WAAf,UACI,yBAAQI,QAASe,EAAe9B,KAAM,SAASW,UAAU,UAAzD,kCACyB,cAAC,IAAD,CAAiBwB,KAAMC,SAEhD,yBAAQrB,QAASe,EAAe9B,KAAM,SAASW,UAAU,UAAzD,kCACyB,cAAC,IAAD,CAAiBwB,KAAME,gB,gBCyCjDC,EAnED,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAAa,EACLpD,oBAAS,GADJ,mBAC5BqD,EAD4B,KACnBC,EADmB,OAEHtD,mBAASmD,EAASI,MAFf,mBAE5BC,EAF4B,KAElBC,EAFkB,KAI7BC,EAAa,uCAAG,sBAAA3C,EAAA,0DACP4C,OAAOC,QAAQ,6CADR,gCAGRjE,EAAUkE,IAAV,iBAAwBV,EAASjB,KAAM4B,SAH/B,uBAIRjE,EAAekE,WAAWZ,EAASa,eAAeF,SAJ1C,2CAAH,qDAObG,EAAgB,kBAAMX,GAAW,SAAC1B,GAAD,OAAWA,MAE5Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAUkE,IAAV,iBAAwBV,EAASjB,KAAMgC,OAAO,CAChDX,KAAMC,IAHG,OAKbF,GAAW,GALE,2CAAH,sDAcd,OACI,qBAAK/B,UAAU,QAAf,SACK8B,EACG,qCACI,uBAAMvC,SAAUA,EAAUS,UAAU,sBAApC,UACI,uBACIC,KAAK,OACLC,YAAY,kBACZZ,MAAO2C,EACP9B,UAAQ,EACRyC,WAAS,EACT1D,SAlBP,SAACC,GAAW,IAEZG,EACTH,EADAC,OAASE,MAEb4C,EAAY5C,IAeQU,UAAU,cAEd,uBAAOC,KAAK,SAASX,MAAM,eAAeU,UAAU,eAExD,sBAAMI,QAASsC,EAAe1C,UAAU,oBAAxC,uBAKJ,qCACA,6BAAK4B,EAASI,OACbJ,EAASa,eAAiB,qBAAKI,IAAKjB,EAASa,gBAC7CZ,GACG,sBAAK7B,UAAU,iBAAf,UACI,sBAAMI,QAAS+B,EAAf,SACI,cAAC,IAAD,CAAiBX,KAAMsB,QAE3B,sBAAM1C,QAASsC,EAAf,SACI,cAAC,IAAD,CAAiBlB,KAAMuB,iB,QCsCpCC,EA9FM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACNxE,mBAAS,IADH,mBACzByE,EADyB,KAClBC,EADkB,OAEI1E,mBAAS,IAFb,mBAEzB2E,EAFyB,KAEbC,EAFa,KAI1B9D,EAAQ,uCAAG,WAAMJ,GAAN,qBAAAK,EAAA,yDACF,KAAR0D,EADU,oDAIb/D,EAAMM,iBACFgD,EAAgB,GACF,KAAfW,EANU,wBAOHE,EAAiBhF,EAAeiF,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBAP3D,SAQcJ,EAAeK,UAAUP,EAAY,YARnD,cAQHQ,EARG,iBASaA,EAASL,IAAIM,iBAT1B,QASTpB,EATS,sBAWPb,EAAW,CACbI,KAAMkB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBhB,iBAfS,UAiBPrE,EAAU8F,WAAW,UAAUC,IAAIvC,GAjB5B,QAkBbuB,EAAS,IACTE,EAAc,IAnBD,4CAAH,sDA8Cd,OACI,uBAAM9D,SAAUA,EAAUS,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACAA,UAAU,sBACVV,MAAO4D,EACPhE,SA9BK,SAACC,GAAW,IAEZG,EACTH,EADAC,OAASE,MAEb6D,EAAS7D,IA2BDW,KAAK,OACLC,YAAY,uBACZkE,UAAW,MAEX,uBAAOnE,KAAK,SAASX,MAAM,SAASU,UAAU,2BAElD,wBAAOqE,IAAI,cAAcrE,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBwB,KAAM8C,SAE3B,uBACI3D,GAAG,cACHV,KAAK,OACLsE,OAAO,UACPrF,SAtCQ,SAACC,GAAU,IAIrBqF,EADFrF,EADAC,OAASqF,MAES,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAEfC,EAChBD,EADAE,cAAgBD,OAEpBzB,EAAcyB,IAElBJ,EAAOM,cAAcR,IA2BbS,MAAO,CACPC,QAAS,KAGZ9B,GACG,sBAAKpD,UAAU,0BAAf,UACA,qBACI6C,IAAKO,EACL6B,MAAO,CACPE,gBAAiB/B,KAGrB,sBAAKpD,UAAU,qBAAqBI,QApCtB,kBAAMiD,EAAc,KAoClC,UACI,0CACA,cAAC,IAAD,CAAiB7B,KAAM4D,gBC9D5BC,EAzBF,SAAC,GAAe,IAAdpC,EAAa,EAAbA,QAAa,EACIxE,mBAAS,IADb,mBACjB6G,EADiB,KACTC,EADS,KAcxB,OAXAC,qBAAU,WACNpH,EAAU8F,WAAW,UAAUuB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACvD,GAAD,oBACjC3B,GAAI2B,EAAI3B,IACL2B,EAAI3C,WAEX4F,EAAUI,QAEhB,IAIE,sBAAK3F,UAAU,YAAf,UACI,cAAC,EAAD,CAAciD,QAASA,IACvB,qBAAKgC,MAAO,CAACa,UAAU,IAAvB,SACKR,EAAOO,KAAI,SAAC3C,GAAD,OACR,cAAC,EAAD,CAAsBtB,SAAUsB,EAAOrB,QAASqB,EAAMe,YAAchB,EAAQQ,KAAhEP,EAAMvC,a,QCcvBoF,EAhCI,SAAC,GAAD,IAAE9C,EAAF,EAAEA,QAAF,OACf,8BACI,qBAAIgC,MAAO,CAACe,QAAQ,OAAQC,eAAe,SAAUH,UAAU,IAA/D,UACI,6BACI,cAAC,IAAD,CAAMI,GAAG,IAAIjB,MAAO,CAACkB,YAAY,IAAjC,SACI,cAAC,EAAD,QAGR,6BACI,eAAC,IAAD,CACID,GAAG,WACHjB,MAAO,CACHmB,WAAW,GACXJ,QAAQ,OACRK,cAAc,SACdC,WAAW,SACXxF,SAAU,IAPlB,UAUI,cAAC,IAAD,CAAiBU,KAAM+E,IAAQC,MAAO,UAAWC,KAAK,OACtD,sBAAMxB,MAAO,CAACa,UAAU,IAAxB,SACK7C,EAAQyD,YAAR,UACQzD,EAAQyD,YADhB,kBAEK,uBCzBf,cAA4B,IAA1BC,EAAyB,EAAzBA,YAAY1D,EAAa,EAAbA,QACnB2D,EAAUC,cADsB,EAEMpI,mBAASwE,EAAQyD,aAFvB,mBAE/BI,EAF+B,KAEfC,EAFe,KAehCxH,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACHwD,EAAQyD,cAAgBI,EAFd,gCAGH7D,EAAQ+D,cAAc,CACxBN,YAAYI,IAJP,OAMTH,IANS,2CAAH,sDAUd,OACI,sBAAK3G,UAAU,YAAf,UACI,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACI,uBACId,SArBC,SAACC,GAAW,IAEZG,EACTH,EADAC,OAASE,MAEbyH,EAAkBzH,IAkBNW,KAAK,OACL2C,WAAS,EACT1C,YAAY,eACZZ,MAAOwH,EACP9G,UAAU,cAEd,uBACIC,KAAK,SACLX,MAAM,iBACNU,UAAU,UACViF,MAAO,CACHa,UAAU,SAItB,sBAAM9F,UAAU,2BAA2BI,QA1C7B,WAClBlC,EAAY+I,UACZL,EAAQM,KAAK,MAwCT,yBCTGC,EAjCG,SAAC,GAAwC,IAAvCR,EAAsC,EAAtCA,YAAaS,EAAyB,EAAzBA,WAAYnE,EAAa,EAAbA,QAEzC,OACI,eAAC,IAAD,WACKmE,GAAc,cAAC,EAAD,CAAYnE,QAASA,IACpC,cAAC,IAAD,UACKmE,EACD,sBACInC,MAAO,CACHoC,SAAU,IACV7G,MAAM,OACN8G,OAAQ,SACRxB,UAAW,GACXE,QAAS,OACTC,eAAgB,UAPxB,UAUA,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMvE,QAASA,MAEnB,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAASxE,QAASA,EAAS0D,YAAaA,SAG5C,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,Y,ksBC7BpB,IAAME,EAASC,IAAOC,OAAV,KAUNC,EAAOF,IAAOG,GAAV,KAIJC,EAAWJ,IAAOK,GAAV,KAMRC,EAAON,IAAOnI,EAAV,KACC,SAAA0I,GAAK,OAAIA,EAAMC,MAAMC,iBAG1BC,EAAYV,IAAOW,KAAV,KAIF,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,iBAGnB,oBACb,eAACb,EAAD,WACE,eAACG,EAAD,WACE,cAACE,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,wBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,uBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,qBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,mBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,oBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,uBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,qBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,yBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,wBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,wBAEF,cAACT,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAX,2BAGJ,eAACH,EAAD,uBAAoB,IAAItE,MAAO0E,cAA/B,eCzBWC,MAzCf,WAAgB,IAAD,EACWjK,oBAAS,GADpB,mBACNkK,EADM,KACAC,EADA,OAEiBnK,mBAAS,MAF1B,mBAENwE,EAFM,KAEG4F,EAFH,KA6Bb,OAzBArD,qBAAU,WACRtH,EAAY4K,oBAAmB,SAACC,GAE5BF,EADCE,EACU,CACTrC,YAAaqC,EAAKrC,YAClBjD,IAAKsF,EAAKtF,IACVuD,cAAe,SAACgC,GAAD,OAAUD,EAAK/B,cAAcgC,KAGnC,MAEbJ,GAAQ,QAEV,IAaA,qCACGD,EAAO,cAAC,EAAD,CACEhC,YAZM,WAClB,IAAMoC,EAAO7K,EAAY+K,YACzBJ,EAAW,CACTnC,YAAaqC,EAAKrC,YAClBjD,IAAKsF,EAAKtF,IACVuD,cAAe,SAACgC,GAAD,OAAUD,EAAK/B,cAAcgC,OAQlC5B,WAAY8B,QAAQjG,GACpBA,QAASA,IACN,kBACb,cAAC,EAAD,Q,MCpCNkG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.95c99e80.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value}\r\n        } = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }\r\n        else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }\r\n            else{\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            console.log(data);\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev); //이전의 값과 반대값 저장\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input\r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required \r\n                value={password}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input \r\n                type=\"submit\"\r\n                className=\"authInput authSubmit\" \r\n                value={newAccount ? \"Create Account\" : \"Log In\"} \r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount}className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\n\r\nexport const Ddip = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"30\" viewBox=\"0 0 64 30\">\r\n        <text id=\"DDIP\" transform=\"translate(32 25)\" fill=\"#4169e1\" fontSize=\"27\" fontFamily=\"Emmett\"><tspan x=\"-31.32\" y=\"0\">DDIP</tspan></text>\r\n    </svg>\r\n\r\n);","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Ddip } from \"components/Icon\";\r\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name}\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <Ddip />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name =\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name =\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are U Sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n                {isOwner && (\r\n                    <div className=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>  \r\n                )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {dbService, storageService} from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async(event) => {\r\n        if(nweet===\"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachementRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachementRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event ;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange =(event) =>{\r\n        const {\r\n            target: {files}\r\n        } = event;\r\n        const theFile = files[0];//file only one\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result}\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                    backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                </div>\r\n            )}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport {dbService} from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => { //realtime --> No re-render\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    },[]);\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{marginTop:30}}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Ddip } from \"./Icon\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n    <nav>\r\n        <ul style={{display:\"flex\", justifyContent:\"center\", marginTop:50}}>\r\n            <li>\r\n                <Link to=\"/\" style={{marginRight:10}}>\r\n                    <Ddip />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link \r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft:10,\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        alignItems:\"center\",\r\n                        fontSize: 12\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{marginTop:10}}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"\r\n                        }\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser,userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display Name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop:10\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <div\r\n                    style={{\r\n                        maxWidth: 890,\r\n                        width:\"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\"\r\n                    }}\r\n                >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                </Route>\r\n                </div> : \r\n                <Route exact path=\"/\">\r\n                    <Auth/>\r\n                </Route>\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n \r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin:50px 0px;\r\n`;\r\n \r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n \r\nconst ListItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n \r\nconst Link = styled.a`\r\n  color: ${props => props.theme.darkBlueColor};\r\n`;\r\n \r\nconst Copyright = styled.span`\r\n    &:not(:last-child) {\r\n        margin-right: 16px;\r\n    },\r\n    color: ${props => props.theme.darkGreyColor};\r\n`;\r\n \r\nexport default () => (\r\n  <Footer>\r\n    <List>\r\n      <ListItem>\r\n        <Link href=\"#\">about us</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">support</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">press</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">api</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">jobs</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">privacy</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">terms</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">directory</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">profiles</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">hashtags</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">language</Link>\r\n      </ListItem>\r\n    </List>\r\n    <Copyright>Nweeter {new Date().getFullYear()} &copy;</Copyright>\r\n  </Footer>\r\n);\r\n","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => { // user가 있는지 확인하는 함수\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });//user object의 일부만 적용해야 React가 헷갈리지 않음\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  },[]);\n  //새로고침할 때 마다 작동\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter\n                refreshUser={refreshUser} \n                isLoggedIn={Boolean(userObj)} \n                userObj={userObj}\n              /> : \"Initializing...\"}\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}